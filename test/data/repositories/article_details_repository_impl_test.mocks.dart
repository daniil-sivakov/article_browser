// Mocks generated by Mockito 5.4.5 from annotations
// in articles_st_trial/test/domain/data/article_details_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:article_browser/data/api/api_client.dart' as _i7;
import 'package:article_browser/data/models/article_data/article_data.dart'
    as _i2;
import 'package:article_browser/data/models/comment_data/comment_data.dart'
    as _i4;
import 'package:article_browser/data/providers/local_storage_provider.dart'
    as _i9;
import 'package:article_browser/data/codecs/article_details_codec.dart' as _i10;
import 'package:article_browser/data/factories/article_details_factory.dart'
    as _i12;
import 'package:article_browser/domain/models/article/article.dart' as _i6;
import 'package:article_browser/domain/models/article_details/article_details.dart'
    as _i3;
import 'package:article_browser/domain/models/comment/comment.dart' as _i13;
import 'package:article_browser/domain/models/reception_details/reception_details.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeArticleData_0 extends _i1.SmartFake implements _i2.ArticleData {
  _FakeArticleData_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeArticleDetails_1 extends _i1.SmartFake
    implements _i3.ArticleDetails {
  _FakeArticleDetails_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ArticleDataCopyWith_2<$Res> extends _i1.SmartFake
    implements _i2.$ArticleDataCopyWith<$Res> {
  _Fake$ArticleDataCopyWith_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$CommentDataCopyWith_3<$Res> extends _i1.SmartFake
    implements _i4.$CommentDataCopyWith<$Res> {
  _Fake$CommentDataCopyWith_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReceptionDetails_4 extends _i1.SmartFake
    implements _i5.ReceptionDetails {
  _FakeReceptionDetails_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeArticle_5 extends _i1.SmartFake implements _i6.Article {
  _FakeArticle_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ArticleDetailsCopyWith_6<$Res> extends _i1.SmartFake
    implements _i3.$ArticleDetailsCopyWith<$Res> {
  _Fake$ArticleDetailsCopyWith_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i7.ApiClient {
  @override
  _i8.Future<List<_i2.ArticleData>> fetchArticles() =>
      (super.noSuchMethod(
            Invocation.method(#fetchArticles, []),
            returnValue: _i8.Future<List<_i2.ArticleData>>.value(
              <_i2.ArticleData>[],
            ),
            returnValueForMissingStub: _i8.Future<List<_i2.ArticleData>>.value(
              <_i2.ArticleData>[],
            ),
          )
          as _i8.Future<List<_i2.ArticleData>>);

  @override
  _i8.Future<_i2.ArticleData> fetchArticleDetails(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchArticleDetails, [id]),
            returnValue: _i8.Future<_i2.ArticleData>.value(
              _FakeArticleData_0(
                this,
                Invocation.method(#fetchArticleDetails, [id]),
              ),
            ),
            returnValueForMissingStub: _i8.Future<_i2.ArticleData>.value(
              _FakeArticleData_0(
                this,
                Invocation.method(#fetchArticleDetails, [id]),
              ),
            ),
          )
          as _i8.Future<_i2.ArticleData>);

  @override
  _i8.Future<List<_i4.CommentData>> fetchComments(int? articleId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchComments, [articleId]),
            returnValue: _i8.Future<List<_i4.CommentData>>.value(
              <_i4.CommentData>[],
            ),
            returnValueForMissingStub: _i8.Future<List<_i4.CommentData>>.value(
              <_i4.CommentData>[],
            ),
          )
          as _i8.Future<List<_i4.CommentData>>);
}

/// A class which mocks [LocalStorageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageProvider extends _i1.Mock
    implements _i9.LocalStorageProvider {
  @override
  _i8.Future<void> set({required String? key, required String? value}) =>
      (super.noSuchMethod(
            Invocation.method(#set, [], {#key: key, #value: value}),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<String?> get(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#get, [key]),
            returnValue: _i8.Future<String?>.value(),
            returnValueForMissingStub: _i8.Future<String?>.value(),
          )
          as _i8.Future<String?>);

  @override
  _i8.Future<void> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> removeAll() =>
      (super.noSuchMethod(
            Invocation.method(#removeAll, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);
}

/// A class which mocks [ArticleDetailsCodec].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDetailsCodec extends _i1.Mock
    implements _i10.ArticleDetailsCodec {
  @override
  _i3.ArticleDetails decodeDetailsFromJson(String? detailsJsonString) =>
      (super.noSuchMethod(
            Invocation.method(#decodeDetailsFromJson, [detailsJsonString]),
            returnValue: _FakeArticleDetails_1(
              this,
              Invocation.method(#decodeDetailsFromJson, [detailsJsonString]),
            ),
            returnValueForMissingStub: _FakeArticleDetails_1(
              this,
              Invocation.method(#decodeDetailsFromJson, [detailsJsonString]),
            ),
          )
          as _i3.ArticleDetails);

  @override
  String encodeToJsonString(_i3.ArticleDetails? articleDetails) =>
      (super.noSuchMethod(
            Invocation.method(#encodeToJsonString, [articleDetails]),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.method(#encodeToJsonString, [articleDetails]),
            ),
            returnValueForMissingStub: _i11.dummyValue<String>(
              this,
              Invocation.method(#encodeToJsonString, [articleDetails]),
            ),
          )
          as String);
}

/// A class which mocks [ArticleDetailsFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDetailsFactory extends _i1.Mock
    implements _i12.ArticleDetailsFactory {
  @override
  _i3.ArticleDetails createNetworkDetails(
    _i2.ArticleData? articleData,
    List<_i4.CommentData>? commentsData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createNetworkDetails, [
              articleData,
              commentsData,
            ]),
            returnValue: _FakeArticleDetails_1(
              this,
              Invocation.method(#createNetworkDetails, [
                articleData,
                commentsData,
              ]),
            ),
            returnValueForMissingStub: _FakeArticleDetails_1(
              this,
              Invocation.method(#createNetworkDetails, [
                articleData,
                commentsData,
              ]),
            ),
          )
          as _i3.ArticleDetails);
}

/// A class which mocks [ArticleData].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleData extends _i1.Mock implements _i2.ArticleData {
  @override
  int get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  int get userId =>
      (super.noSuchMethod(
            Invocation.getter(#userId),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  String get title =>
      (super.noSuchMethod(
            Invocation.getter(#title),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#title),
            ),
            returnValueForMissingStub: _i11.dummyValue<String>(
              this,
              Invocation.getter(#title),
            ),
          )
          as String);

  @override
  String get body =>
      (super.noSuchMethod(
            Invocation.getter(#body),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#body),
            ),
            returnValueForMissingStub: _i11.dummyValue<String>(
              this,
              Invocation.getter(#body),
            ),
          )
          as String);

  @override
  _i2.$ArticleDataCopyWith<_i2.ArticleData> get copyWith =>
      (super.noSuchMethod(
            Invocation.getter(#copyWith),
            returnValue: _Fake$ArticleDataCopyWith_2<_i2.ArticleData>(
              this,
              Invocation.getter(#copyWith),
            ),
            returnValueForMissingStub:
                _Fake$ArticleDataCopyWith_2<_i2.ArticleData>(
                  this,
                  Invocation.getter(#copyWith),
                ),
          )
          as _i2.$ArticleDataCopyWith<_i2.ArticleData>);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [CommentData].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommentData extends _i1.Mock implements _i4.CommentData {
  @override
  int get postId =>
      (super.noSuchMethod(
            Invocation.getter(#postId),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  int get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
            returnValueForMissingStub: _i11.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  String get email =>
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
            returnValueForMissingStub: _i11.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  String get body =>
      (super.noSuchMethod(
            Invocation.getter(#body),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#body),
            ),
            returnValueForMissingStub: _i11.dummyValue<String>(
              this,
              Invocation.getter(#body),
            ),
          )
          as String);

  @override
  _i4.$CommentDataCopyWith<_i4.CommentData> get copyWith =>
      (super.noSuchMethod(
            Invocation.getter(#copyWith),
            returnValue: _Fake$CommentDataCopyWith_3<_i4.CommentData>(
              this,
              Invocation.getter(#copyWith),
            ),
            returnValueForMissingStub:
                _Fake$CommentDataCopyWith_3<_i4.CommentData>(
                  this,
                  Invocation.getter(#copyWith),
                ),
          )
          as _i4.$CommentDataCopyWith<_i4.CommentData>);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [ArticleDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDetails extends _i1.Mock implements _i3.ArticleDetails {
  @override
  _i5.ReceptionDetails get receptionDetails =>
      (super.noSuchMethod(
            Invocation.getter(#receptionDetails),
            returnValue: _FakeReceptionDetails_4(
              this,
              Invocation.getter(#receptionDetails),
            ),
            returnValueForMissingStub: _FakeReceptionDetails_4(
              this,
              Invocation.getter(#receptionDetails),
            ),
          )
          as _i5.ReceptionDetails);

  @override
  _i6.Article get article =>
      (super.noSuchMethod(
            Invocation.getter(#article),
            returnValue: _FakeArticle_5(this, Invocation.getter(#article)),
            returnValueForMissingStub: _FakeArticle_5(
              this,
              Invocation.getter(#article),
            ),
          )
          as _i6.Article);

  @override
  List<_i13.Comment> get comments =>
      (super.noSuchMethod(
            Invocation.getter(#comments),
            returnValue: <_i13.Comment>[],
            returnValueForMissingStub: <_i13.Comment>[],
          )
          as List<_i13.Comment>);

  @override
  _i3.$ArticleDetailsCopyWith<_i3.ArticleDetails> get copyWith =>
      (super.noSuchMethod(
            Invocation.getter(#copyWith),
            returnValue: _Fake$ArticleDetailsCopyWith_6<_i3.ArticleDetails>(
              this,
              Invocation.getter(#copyWith),
            ),
            returnValueForMissingStub:
                _Fake$ArticleDetailsCopyWith_6<_i3.ArticleDetails>(
                  this,
                  Invocation.getter(#copyWith),
                ),
          )
          as _i3.$ArticleDetailsCopyWith<_i3.ArticleDetails>);

  @override
  _i3.ArticleDetails asCached() =>
      (super.noSuchMethod(
            Invocation.method(#asCached, []),
            returnValue: _FakeArticleDetails_1(
              this,
              Invocation.method(#asCached, []),
            ),
            returnValueForMissingStub: _FakeArticleDetails_1(
              this,
              Invocation.method(#asCached, []),
            ),
          )
          as _i3.ArticleDetails);

  @override
  int getArticleId() =>
      (super.noSuchMethod(
            Invocation.method(#getArticleId, []),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
