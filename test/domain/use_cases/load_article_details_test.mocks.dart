// Mocks generated by Mockito 5.4.5 from annotations
// in articles_st_trial/test/domain/use_cases/load_article_details_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:article_browser/core/services/network_connection_service.dart'
    as _i5;
import 'package:article_browser/domain/models/article/article.dart' as _i4;
import 'package:article_browser/domain/models/article_details/article_details.dart'
    as _i2;
import 'package:article_browser/domain/models/comment/comment.dart' as _i8;
import 'package:article_browser/domain/models/reception_details/reception_details.dart'
    as _i3;
import 'package:article_browser/domain/repositories/article_details_repository.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeArticleDetails_0 extends _i1.SmartFake
    implements _i2.ArticleDetails {
  _FakeArticleDetails_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReceptionDetails_1 extends _i1.SmartFake
    implements _i3.ReceptionDetails {
  _FakeReceptionDetails_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeArticle_2 extends _i1.SmartFake implements _i4.Article {
  _FakeArticle_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ArticleDetailsCopyWith_3<$Res> extends _i1.SmartFake
    implements _i2.$ArticleDetailsCopyWith<$Res> {
  _Fake$ArticleDetailsCopyWith_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NetworkConnectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkConnectionService extends _i1.Mock
    implements _i5.NetworkConnectionService {
  @override
  _i6.Future<_i5.NetworkConnectionState> checkConnection() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnection, []),
            returnValue: _i6.Future<_i5.NetworkConnectionState>.value(
              _i5.NetworkConnectionState.hasConnection,
            ),
            returnValueForMissingStub:
                _i6.Future<_i5.NetworkConnectionState>.value(
                  _i5.NetworkConnectionState.hasConnection,
                ),
          )
          as _i6.Future<_i5.NetworkConnectionState>);
}

/// A class which mocks [ArticleDetailsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDetailsRepository extends _i1.Mock
    implements _i7.ArticleDetailsRepository {
  @override
  _i6.Future<_i2.ArticleDetails> fetchDetails(int? articleId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchDetails, [articleId]),
            returnValue: _i6.Future<_i2.ArticleDetails>.value(
              _FakeArticleDetails_0(
                this,
                Invocation.method(#fetchDetails, [articleId]),
              ),
            ),
            returnValueForMissingStub: _i6.Future<_i2.ArticleDetails>.value(
              _FakeArticleDetails_0(
                this,
                Invocation.method(#fetchDetails, [articleId]),
              ),
            ),
          )
          as _i6.Future<_i2.ArticleDetails>);

  @override
  _i6.Future<void> saveDetailsToCache(_i2.ArticleDetails? articleDetails) =>
      (super.noSuchMethod(
            Invocation.method(#saveDetailsToCache, [articleDetails]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.ArticleDetails?> loadCachedDetails(int? articleId) =>
      (super.noSuchMethod(
            Invocation.method(#loadCachedDetails, [articleId]),
            returnValue: _i6.Future<_i2.ArticleDetails?>.value(),
            returnValueForMissingStub: _i6.Future<_i2.ArticleDetails?>.value(),
          )
          as _i6.Future<_i2.ArticleDetails?>);
}

/// A class which mocks [ArticleDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDetails extends _i1.Mock implements _i2.ArticleDetails {
  @override
  _i3.ReceptionDetails get receptionDetails =>
      (super.noSuchMethod(
            Invocation.getter(#receptionDetails),
            returnValue: _FakeReceptionDetails_1(
              this,
              Invocation.getter(#receptionDetails),
            ),
            returnValueForMissingStub: _FakeReceptionDetails_1(
              this,
              Invocation.getter(#receptionDetails),
            ),
          )
          as _i3.ReceptionDetails);

  @override
  _i4.Article get article =>
      (super.noSuchMethod(
            Invocation.getter(#article),
            returnValue: _FakeArticle_2(this, Invocation.getter(#article)),
            returnValueForMissingStub: _FakeArticle_2(
              this,
              Invocation.getter(#article),
            ),
          )
          as _i4.Article);

  @override
  List<_i8.Comment> get comments =>
      (super.noSuchMethod(
            Invocation.getter(#comments),
            returnValue: <_i8.Comment>[],
            returnValueForMissingStub: <_i8.Comment>[],
          )
          as List<_i8.Comment>);

  @override
  _i2.$ArticleDetailsCopyWith<_i2.ArticleDetails> get copyWith =>
      (super.noSuchMethod(
            Invocation.getter(#copyWith),
            returnValue: _Fake$ArticleDetailsCopyWith_3<_i2.ArticleDetails>(
              this,
              Invocation.getter(#copyWith),
            ),
            returnValueForMissingStub:
                _Fake$ArticleDetailsCopyWith_3<_i2.ArticleDetails>(
                  this,
                  Invocation.getter(#copyWith),
                ),
          )
          as _i2.$ArticleDetailsCopyWith<_i2.ArticleDetails>);

  @override
  _i2.ArticleDetails asCached() =>
      (super.noSuchMethod(
            Invocation.method(#asCached, []),
            returnValue: _FakeArticleDetails_0(
              this,
              Invocation.method(#asCached, []),
            ),
            returnValueForMissingStub: _FakeArticleDetails_0(
              this,
              Invocation.method(#asCached, []),
            ),
          )
          as _i2.ArticleDetails);

  @override
  int getArticleId() =>
      (super.noSuchMethod(
            Invocation.method(#getArticleId, []),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
