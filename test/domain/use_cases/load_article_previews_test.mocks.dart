// Mocks generated by Mockito 5.4.5 from annotations
// in articles_st_trial/test/domain/use_cases/load_article_previews_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:article_browser/core/services/network_connection_service.dart'
    as _i4;
import 'package:article_browser/domain/models/article/article.dart' as _i7;
import 'package:article_browser/domain/models/article_previews/article_previews.dart'
    as _i2;
import 'package:article_browser/domain/models/reception_details/reception_details.dart'
    as _i3;
import 'package:article_browser/domain/repositories/article_previews_repository.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeArticlePreviews_0 extends _i1.SmartFake
    implements _i2.ArticlePreviews {
  _FakeArticlePreviews_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReceptionDetails_1 extends _i1.SmartFake
    implements _i3.ReceptionDetails {
  _FakeReceptionDetails_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ArticlePreviewsCopyWith_2<$Res> extends _i1.SmartFake
    implements _i2.$ArticlePreviewsCopyWith<$Res> {
  _Fake$ArticlePreviewsCopyWith_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NetworkConnectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkConnectionService extends _i1.Mock
    implements _i4.NetworkConnectionService {
  @override
  _i5.Future<_i4.NetworkConnectionState> checkConnection() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnection, []),
            returnValue: _i5.Future<_i4.NetworkConnectionState>.value(
              _i4.NetworkConnectionState.hasConnection,
            ),
            returnValueForMissingStub:
                _i5.Future<_i4.NetworkConnectionState>.value(
                  _i4.NetworkConnectionState.hasConnection,
                ),
          )
          as _i5.Future<_i4.NetworkConnectionState>);
}

/// A class which mocks [ArticlePreviewsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlePreviewsRepository extends _i1.Mock
    implements _i6.ArticlePreviewsRepository {
  @override
  _i5.Future<_i2.ArticlePreviews> fetchPreviews() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPreviews, []),
            returnValue: _i5.Future<_i2.ArticlePreviews>.value(
              _FakeArticlePreviews_0(
                this,
                Invocation.method(#fetchPreviews, []),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.ArticlePreviews>.value(
              _FakeArticlePreviews_0(
                this,
                Invocation.method(#fetchPreviews, []),
              ),
            ),
          )
          as _i5.Future<_i2.ArticlePreviews>);

  @override
  _i5.Future<void> savePreviewsToCache(_i2.ArticlePreviews? articlePreviews) =>
      (super.noSuchMethod(
            Invocation.method(#savePreviewsToCache, [articlePreviews]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.ArticlePreviews?> loadCachedPreviews() =>
      (super.noSuchMethod(
            Invocation.method(#loadCachedPreviews, []),
            returnValue: _i5.Future<_i2.ArticlePreviews?>.value(),
            returnValueForMissingStub: _i5.Future<_i2.ArticlePreviews?>.value(),
          )
          as _i5.Future<_i2.ArticlePreviews?>);
}

/// A class which mocks [ArticlePreviews].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlePreviews extends _i1.Mock implements _i2.ArticlePreviews {
  @override
  _i3.ReceptionDetails get receptionDetails =>
      (super.noSuchMethod(
            Invocation.getter(#receptionDetails),
            returnValue: _FakeReceptionDetails_1(
              this,
              Invocation.getter(#receptionDetails),
            ),
            returnValueForMissingStub: _FakeReceptionDetails_1(
              this,
              Invocation.getter(#receptionDetails),
            ),
          )
          as _i3.ReceptionDetails);

  @override
  List<_i7.Article> get data =>
      (super.noSuchMethod(
            Invocation.getter(#data),
            returnValue: <_i7.Article>[],
            returnValueForMissingStub: <_i7.Article>[],
          )
          as List<_i7.Article>);

  @override
  _i2.$ArticlePreviewsCopyWith<_i2.ArticlePreviews> get copyWith =>
      (super.noSuchMethod(
            Invocation.getter(#copyWith),
            returnValue: _Fake$ArticlePreviewsCopyWith_2<_i2.ArticlePreviews>(
              this,
              Invocation.getter(#copyWith),
            ),
            returnValueForMissingStub:
                _Fake$ArticlePreviewsCopyWith_2<_i2.ArticlePreviews>(
                  this,
                  Invocation.getter(#copyWith),
                ),
          )
          as _i2.$ArticlePreviewsCopyWith<_i2.ArticlePreviews>);

  @override
  _i2.ArticlePreviews asCached() =>
      (super.noSuchMethod(
            Invocation.method(#asCached, []),
            returnValue: _FakeArticlePreviews_0(
              this,
              Invocation.method(#asCached, []),
            ),
            returnValueForMissingStub: _FakeArticlePreviews_0(
              this,
              Invocation.method(#asCached, []),
            ),
          )
          as _i2.ArticlePreviews);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
